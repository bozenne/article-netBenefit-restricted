
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## * Header
> ## ** interactive
> ## path <- "h:/SundKonsolidering_BioStatHome/Cluster/GPC/article-restricted/"
> ## setwd(path)
> ## source("BATCH_scenario2-ChemoVSImmuno.R")
> ## ** slurm
> ## cd /projects/biostat01/people/hpl802/GPC/article-restricted/
> ## sbatch -a 1-1 -J 'scenario2-ChemoVSImmuno' --output=/dev/null --error=/dev/null R CMD BATCH --vanilla BATCH_scenario2-ChemoVSImmuno.R /dev/null 
> ## ** BATCH
> ## cd /projects/biostat01/people/hpl802/GPC/article-restricted/
> ## R CMD BATCH --vanilla '--args iter_sim=1 n.iter_sim=10' BATCH_scenario2-ChemoVSImmuno.R output/scenario2-ChemoVSImmuno/R-ChemoVSImmuno-1.Rout &
> ## ** BATCH loop
> ## cd /projects/biostat01/people/hpl802/GPC/article-restricted/
> ## for ITER in `seq 1 10`;
> ## do
> ## eval 'R CMD BATCH --vanilla "--args iter_sim='$ITER' n.iter_sim=10" BATCH_scenario2-ChemoVSImmuno.R output/scenario2-ChemoVSImmuno/R-ChemoVSImmuno-'$ITER'.Rout &'
> ## done
> 
> ## [32] 3353501
> ## [33] 3353502
> ## [34] 3353503
> ## [35] 3353504
> ## [36] 3353505
> ## [37] 3353506
> ## [38] 3353507
> ## [39] 3353508
> ## [40] 3353509
> ## [41] 3353510
> 
> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 270604 14.5     665617 35.6   408739 21.9
Vcells 451653  3.5    8388608 64.0  1819181 13.9
> 
> ## * Arguments 
> args <- commandArgs(TRUE) ## BATCH MODE
> if(length(args)>0){
+     for (arg in args){
+         eval(parse(text=arg))
+     }
+ }else{ ## SLUMR
+     iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_ID"))
+     n.iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_COUNT"))
+ } ## interactive
> if(is.na(iter_sim)){iter_sim <- 1}
> if(is.na(n.iter_sim)){n.iter_sim <- 10}
> 
> ## * Prepare export
> path <- "."
> path.res <- file.path(path,"Results","scenario2-ChemoVSImmuno")
> if(dir.exists(path.res)==FALSE){
+     if(dir.exists(file.path(path,"Results"))==FALSE){
+     dir.create(file.path(path,"Results"))
+     }
+     dir.create(path.res)
+ }
> path.output <- file.path(path,"output","scenario2-ChemoVSImmuno")
> if(dir.exists(path.output)==FALSE){
+     if(dir.exists(file.path(path,"output"))==FALSE){
+     dir.create(file.path(path,"output"))
+     }
+     dir.create(path.output)
+ }
> 
> ## * Libraries
> require(survival)
Loading required package: survival
> require(BuyseTest) ## install.packages("BuyseTest")
Loading required package: BuyseTest
Loading required package: Rcpp
BuyseTest version 2.3.12
> require(survRM2) ## install.packages("survRM2")
Loading required package: survRM2
> suppressMessages(require(FHtest))
> 
> ## * Settings
> n.sim <- 100
> 
> Tps.inclusion <- 12 
> FollowUp.time_list <- c(12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60) ## every 3 months
> Threshold_list <- c(0,6,12,18,24) ## 0,6,12
> 
> grid <- expand.grid(restrictionTime = FollowUp.time_list,
+                     threshold = Threshold_list,
+                     scenario = 0)
> 
> ## pour faire varier les ratio threshold/restriction time
> grid <- rbind(grid,
+               cbind(restrictionTime = FollowUp.time_list,
+                     threshold = 0.2*FollowUp.time_list,
+                     scenario = 3))
> 
> grid <- rbind(grid,
+               cbind(restrictionTime = FollowUp.time_list,
+                     threshold = 0.3*FollowUp.time_list,
+                     scenario = 5))
> 
> grid <- rbind(grid,
+               cbind(restrictionTime = FollowUp.time_list,
+                     threshold = 0.4*FollowUp.time_list,
+                     scenario = 6))
> 
> ## pour obtenir la valeur exacte du net benefit sans censure
> grid <- rbind(grid,
+               cbind(restrictionTime = 1000,
+                     threshold = Threshold_list,
+                     scenario = 4))
> 
> ## * Seed
> cat("iteration ",iter_sim," over ",n.iter_sim,"\n",sep="")
iteration 60 over 100
> 
> set.seed(1)
> seqSeed <- sample(1:1e5,size=n.iter_sim*n.sim,replace=FALSE)
> ## any(duplicated(seqSeed))
> iSeed <- seqSeed[(n.sim*(iter_sim-1)+1):(n.sim*iter_sim)]
> 
> ## * Loop
> res <- NULL
> for(iSim in 1:n.sim){ ## iSim <- 1
+     cat(iSim," (seed=",iSeed[iSim],"): ",sep="")
+     for (iGrid in 1:NROW(grid)){ ## iGrid <- 1
+         cat("*")
+         set.seed(iSeed[iSim])
+ 
+         iThreshold <- grid$threshold[iGrid]
+         iFollowUpTime <- grid$restrictionTime[iGrid]
+         iScenario <- grid$scenario[iGrid]
+ 
+         ## ** Generate data
+         HazC <- 0.1
+         HazT2 <- HazC*0.95
+         HazT3 <- HazC*0.90
+         HazT4 <- HazC*0.65
+         HazT5 <- HazC*0.1
+         t1 <- 1
+         t2 <- 3
+         t3 <- 9
+         t4 <- 24
+         n.Treatment <- 200
+         n.Control <- 200
+         n <- n.Treatment+n.Control
+       
+         TimeEvent.Ctr <- rexp(n.Control,HazC)
+         TimeEvent.Tr1 <- rexp(n.Control,HazC)
+         TimeEvent.Tr2 <- rexp(n.Control,HazT2)
+         TimeEvent.Tr3 <- rexp(n.Control,HazT3)
+         TimeEvent.Tr4 <- rexp(n.Control,HazT4)
+         TimeEvent.Tr5 <- rexp(n.Control,HazT5)
+       
+         TimeEvent.Tr <- ifelse(TimeEvent.Tr1<t1,TimeEvent.Tr1,
+                         ifelse(t1+TimeEvent.Tr2<t2,t1+TimeEvent.Tr2,
+                         ifelse(t2+TimeEvent.Tr3<t3,t2+TimeEvent.Tr3,
+                         ifelse(t3+TimeEvent.Tr4<t4,t3+TimeEvent.Tr4,
+                                t4+TimeEvent.Tr5))))
+ 	    
+         ## Tox
+         ptoxC <- c(0.3,0.3)
+         ptoxT <- c(0.3,0.1)
+ 
+         Toxevent1.Ctr <- rbinom(n.Control,1,ptoxC[1])
+         Toxevent1.Tr <- rbinom(n.Treatment,1,ptoxT[1])
+         Toxevent2.Ctr <- rbinom(n.Control,1,ptoxC[2])
+         Toxevent2.Tr <- rbinom(n.Treatment,1,ptoxT[2])
+       
+         TimeEvent <- c(TimeEvent.Tr,TimeEvent.Ctr)
+         Toxevent1 <- c(Toxevent1.Tr,Toxevent1.Ctr)
+         Toxevent2 <- c(Toxevent2.Tr,Toxevent2.Ctr)
+ 	    
+         Time.Cens <- runif(n,iFollowUpTime-Tps.inclusion,iFollowUpTime) ## varier temps de censure
+         tab <- data.frame(group = c(rep(1, n.Treatment),rep(0, n.Control)),
+                           Time0 = TimeEvent,
+                           Event0 = 1,
+                           Time = pmin(Time.Cens,TimeEvent),
+                           Event = NA,
+                           Toxevent1 = Toxevent1,
+                           Toxevent2 = Toxevent2)
+         tab$Event <- as.numeric(tab$Time==TimeEvent)
+         Taux.cens.reel <- 1 - mean(tab$Event)
+   
+         ## ** Analysis using LR
+         LR <- (survdiff(Surv(time=Time, event=Event) ~ group, data=tab, rho=0))
+         pval.LR <- 1 - pchisq(LR$chisq, 1) 
+   
+         ## ** Analysis using NBPeron
+         NBPeron <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold),
+                               method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+         NBPeron.confint <- confint(NBPeron)
+ 
+         ## without censoring
+         NB.noCensoring <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold),
+                                     method.inference = "none", trace = 0)
+ 	    
+        ## ** Analysis using NBPeron + toxicity
+     	NBPeronTox1 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold) + B(Toxevent1, operator = "<0"),
+                          method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+    	NBPeronTox1.confint <- confint(NBPeronTox1)
+ 
+     	NBPeronTox2 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold) + B(Toxevent2, operator = "<0"),
+                          method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+    	NBPeronTox2.confint <- confint(NBPeronTox2)
+ 
+         ## without censoring
+         NBTox1.noCensoring <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold) + B(Toxevent1, operator = "<0"),
+                                         method.inference = "none", trace = 0)
+         NBTox2.noCensoring <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold) + B(Toxevent2, operator = "<0"),
+                                         method.inference = "none", trace = 0)
+ 
+         ## ** Analysis using RMST
+         RMST <- rmst2(time=tab$Time, status=tab$Event, arm= tab$group, tau = NULL, covariates = NULL, alpha = 0.05)
+         pval.RMSTdif <- RMST[["unadjusted.result"]][1,4]
+         pval.RMSTratio <- RMST[["unadjusted.result"]][2,4]
+   
+         ## ** Analysis using WLR
+         WLR <- try(FHtestrcc(Surv(time=Time, event=Event) ~ group, data = tab, rho = 0,lambda = 1))
+         if(inherits(WLR,"try-error")){
+             pval.WLR <- NA
+         }else{
+             pval.WLR <- WLR$pvalue
+         }
+ 
+         ## ** Analysis using RNBPeron
+         if(iFollowUpTime<=24){
+             RNBPeron24.confint <- NBPeron.confint
+         }else{
+             RNBPeron24 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=24),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron24.confint <- confint(RNBPeron24)
+         }
+ 
+         if(iFollowUpTime<=36){
+             RNBPeron36.confint <- NBPeron.confint
+         }else{
+             RNBPeron36 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=36),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron36.confint <- confint(RNBPeron36)
+         }
+ 
+         if(iFollowUpTime<=48){
+             RNBPeron48.confint <- NBPeron.confint
+         }else{
+             RNBPeron48 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=48),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron48.confint <- confint(RNBPeron48)
+         }
+ 
+         ## without censoring
+         rNB.noCensoring24 <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold, restriction = 24),
+                                        method.inference = "none", trace = 0)
+         rNB.noCensoring36 <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold, restriction = 36),
+                                        method.inference = "none", trace = 0)
+         rNB.noCensoring48 <- BuyseTest(data=tab,group ~ TTE(Time0, status=Event0, iThreshold, restriction = 48),
+                                        method.inference = "none", trace = 0)
+ 
+         ## ** Gather results
+         res <- rbind(res,c(iteration = iSim,
+                            seed = iSeed[iSim],
+                            FollowUp_time = iFollowUpTime,
+                            scenario = iScenario,
+                            Threshold = iThreshold,
+                            "Taux censure reel" = Taux.cens.reel,
+                            ## NBPeron
+                            GS.NBPeron = as.numeric(coef(NB.noCensoring)),
+                            estimate.NBPeron = NBPeron.confint[,"estimate"],
+                            se.NBPeron = NBPeron.confint[,"se"],
+                            lower.NBPeron = NBPeron.confint[,"lower.ci"],
+                            upper.NBPeron = NBPeron.confint[,"upper.ci"],
+                            pval.NBPeron = NBPeron.confint[,"p.value"],
+                            ## NBPeronTox1
+                            GS.NBPeronTox1 = as.numeric(utils::tail(coef(NBTox1.noCensoring),1)),
+ 			   estimate.NBPeronTox1 = NBPeronTox1.confint[2,"estimate"],
+                            se.NBPeronTox1 = NBPeronTox1.confint[2,"se"],
+                            lower.NBPeronTox1 = NBPeronTox1.confint[2,"lower.ci"],
+                            upper.NBPeronTox1 = NBPeronTox1.confint[2,"upper.ci"],
+                            pval.NBPeronTox1 = NBPeronTox1.confint[2,"p.value"],
+                            ## NBPeronTox2
+                            GS.NBPeronTox2 = as.numeric(utils::tail(coef(NBTox2.noCensoring),1)),
+                            estimate.NBPeronTox2 = NBPeronTox2.confint[2,"estimate"],
+                            se.NBPeronTox2 = NBPeronTox2.confint[2,"se"],
+                            lower.NBPeronTox2 = NBPeronTox2.confint[2,"lower.ci"],
+                            upper.NBPeronTox2 = NBPeronTox2.confint[2,"upper.ci"],
+                            pval.NBPeronTox2 = NBPeronTox2.confint[2,"p.value"],
+                            ## RNBPeron24
+                            GS.rNBPeron24 = as.numeric(coef(rNB.noCensoring24)),
+                            estimate.RNBPeron24 = RNBPeron24.confint[,"estimate"],
+                            se.RNBPeron24 = RNBPeron24.confint[,"se"],
+                            lower.RNBPeron24 = RNBPeron24.confint[,"lower.ci"],
+                            upper.RNBPeron24 = RNBPeron24.confint[,"upper.ci"],
+                            pval.RNBPeron24 = RNBPeron24.confint[,"p.value"],
+                            ## RNBPero36
+                            GS.rNBPeron36 = as.numeric(coef(rNB.noCensoring36)),
+                            estimate.RNBPeron36 = RNBPeron36.confint[,"estimate"],
+                            se.RNBPeron36 = RNBPeron36.confint[,"se"],
+                            lower.RNBPeron36 = RNBPeron36.confint[,"lower.ci"],
+                            upper.RNBPeron36 = RNBPeron36.confint[,"upper.ci"],
+                            pval.RNBPeron36 = RNBPeron36.confint[,"p.value"],
+                            ## RNBPero48
+                            GS.rNBPeron48 = as.numeric(coef(rNB.noCensoring48)),
+                            estimate.RNBPeron48 = RNBPeron48.confint[,"estimate"],
+                            se.RNBPeron48 = RNBPeron48.confint[,"se"],
+                            lower.RNBPeron48 = RNBPeron48.confint[,"lower.ci"],
+                            upper.RNBPeron48 = RNBPeron48.confint[,"upper.ci"],
+                            pval.RNBPeron48 = RNBPeron48.confint[,"p.value"],
+                            ## others
+                            pval.LOGRANK = pval.LR,
+                            pval.WeightedLOGRANK = pval.WLR,
+                            pval.RMSTdif = pval.RMSTdif,
+                            pval.RMSTratio = pval.RMSTratio))
+ 
+     }
+     saveRDS(res, file = file.path(path.res,paste0("simul_ChemoVSImmuno_",iter_sim,"(tempo).rds")))
+     cat("\n")
+ }
1 (seed=81661): *********************************************************************************************************************************************
2 (seed=44575): *********************************************************************************************************************************************
3 (seed=71219): *********************************************************************************************************************************************
4 (seed=50037): *********************************************************************************************************************************************
5 (seed=92281): *********************************************************************************************************************************************
6 (seed=69829): *********************************************************************************************************************************************
7 (seed=87323): *********************************************************************************************************************************************
8 (seed=21861): *********************************************************************************************************************************************
9 (seed=74794): *********************************************************************************************************************************************
10 (seed=21611): *********************************************************************************************************************************************
11 (seed=24351): *********************************************************************************************************************************************
12 (seed=73617): *********************************************************************************************************************************************
13 (seed=86508): *********************************************************************************************************************************************
14 (seed=32226): *********************************************************************************************************************************************
15 (seed=83349): *********************************************************************************************************************************************
16 (seed=70867): *********************************************************************************************************************************************
17 (seed=71622): *********************************************************************************************************************************************
18 (seed=24913): *********************************************************************************************************************************************
19 (seed=38673): *********************************************************************************************************************************************
20 (seed=66887): *********************************************************************************************************************************************
21 (seed=61741): *********************************************************************************************************************************************
22 (seed=87366): *********************************************************************************************************************************************
23 (seed=96711): *********************************************************************************************************************************************
24 (seed=80585): *********************************************************************************************************************************************
25 (seed=12154): *********************************************************************************************************************************************
26 (seed=46441): *********************************************************************************************************************************************
27 (seed=28448): *********************************************************************************************************************************************
28 (seed=64119): *********************************************************************************************************************************************
29 (seed=35633): *********************************************************************************************************************************************
30 (seed=26968): *********************************************************************************************************************************************
31 (seed=73378): *********************************************************************************************************************************************
32 (seed=40540): *********************************************************************************************************************************************
33 (seed=95087): *********************************************************************************************************************************************
34 (seed=78335): *********************************************************************************************************************************************
35 (seed=95031): *********************************************************************************************************************************************
36 (seed=13846): *********************************************************************************************************************************************
37 (seed=11355): *********************************************************************************************************************************************
38 (seed=38696): *********************************************************************************************************************************************
39 (seed=49650): *********************************************************************************************************************************************
40 (seed=43765): *********************************************************************************************************************************************
41 (seed=72260): *********************************************************************************************************************************************
42 (seed=39146): *********************************************************************************************************************************************
43 (seed=5573): *********************************************************************************************************************************************
44 (seed=81950): *********************************************************************************************************************************************
45 (seed=55458): *********************************************************************************************************************************************
46 (seed=12772): *********************************************************************************************************************************************
47 (seed=55945): *********************************************************************************************************************************************
48 (seed=62960): *********************************************************************************************************************************************
49 (seed=23787): *********************************************************************************************************************************************
50 (seed=81302): *********************************************************************************************************************************************
51 (seed=90731): *********************************************************************************************************************************************
52 (seed=643): *********************************************************************************************************************************************
53 (seed=41009): *********************************************************************************************************************************************
54 (seed=25961): *********************************************************************************************************************************************
55 (seed=43688): *********************************************************************************************************************************************
56 (seed=10028): *********************************************************************************************************************************************
57 (seed=21690): *********************************************************************************************************************************************
58 (seed=1688): *********************************************************************************************************************************************
59 (seed=7855): *********************************************************************************************************************************************
60 (seed=32944): *********************************************************************************************************************************************
61 (seed=17735): *********************************************************************************************************************************************
62 (seed=34171): *********************************************************************************************************************************************
63 (seed=74696): *********************************************************************************************************************************************
64 (seed=97369): *********************************************************************************************************************************************
65 (seed=25353): *********************************************************************************************************************************************
66 (seed=78453): *********************************************************************************************************************************************
67 (seed=44983): *********************************************************************************************************************************************
68 (seed=87247): *********************************************************************************************************************************************
69 (seed=85346): *********************************************************************************************************************************************
70 (seed=77744): *********************************************************************************************************************************************
71 (seed=8174): *********************************************************************************************************************************************
72 (seed=87451): *********************************************************************************************************************************************
73 (seed=87258): *********************************************************************************************************************************************
74 (seed=73697): *********************************************************************************************************************************************
75 (seed=14732): *********************************************************************************************************************************************
76 (seed=89611): *********************************************************************************************************************************************
77 (seed=89421): *********************************************************************************************************************************************
78 (seed=15785): *********************************************************************************************************************************************
79 (seed=38725): *********************************************************************************************************************************************
80 (seed=18908): *********************************************************************************************************************************************
81 (seed=46941): *********************************************************************************************************************************************
82 (seed=15509): *********************************************************************************************************************************************
83 (seed=10470): *********************************************************************************************************************************************
84 (seed=7001): *********************************************************************************************************************************************
85 (seed=34551): *********************************************************************************************************************************************
86 (seed=34433): *********************************************************************************************************************************************
87 (seed=58153): *********************************************************************************************************************************************
88 (seed=33159): *********************************************************************************************************************************************
89 (seed=5899): *********************************************************************************************************************************************
90 (seed=20): *********************************************************************************************************************************************
91 (seed=73637): *********************************************************************************************************************************************
92 (seed=55670): *********************************************************************************************************************************************
93 (seed=32079): *********************************************************************************************************************************************
94 (seed=80533): *********************************************************************************************************************************************
95 (seed=15398): *********************************************************************************************************************************************
96 (seed=53780): *********************************************************************************************************************************************
97 (seed=16033): *********************************************************************************************************************************************
98 (seed=55761): *********************************************************************************************************************************************
99 (seed=16947): *********************************************************************************************************************************************
100 (seed=95095): *********************************************************************************************************************************************
> 
> ## * Export
> saveRDS(res, file = file.path(path.res,paste0("simul_ChemoVSImmuno_",iter_sim,".rds")))
> 
> ## * R version
> print(sessionInfo())
R version 4.1.2 (2021-11-01)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux 8.6 (Ootpa)

Matrix products: default
BLAS:   /opt/software/R/4.1.2/lib64/R/lib/libRblas.so
LAPACK: /opt/software/R/4.1.2/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] FHtest_1.5       KMsurv_0.1-5     interval_1.1-0.8 MLEcens_0.1-5   
 [5] Icens_1.66.0     perm_1.0-0.2     survRM2_1.0-4    BuyseTest_2.3.12
 [9] Rcpp_1.0.8.3     survival_3.2-13 

loaded via a namespace (and not attached):
 [1] pillar_1.8.1       compiler_4.1.2     tools_4.1.2        digest_0.6.29     
 [5] lifecycle_1.0.3    tibble_3.1.8       gtable_0.3.1       lattice_0.20-45   
 [9] pkgconfig_2.0.3    rlang_1.0.6        Matrix_1.3-4       cli_3.4.1         
[13] parallel_4.1.2     SparseM_1.81       prodlim_2019.11.13 dplyr_1.0.10      
[17] MatrixModels_0.5-0 generics_0.1.3     vctrs_0.4.2        globals_0.16.1    
[21] stats4_4.1.2       grid_4.1.2         tidyselect_1.1.2   glue_1.6.2        
[25] data.table_1.14.2  listenv_0.8.0      R6_2.5.1           future.apply_1.9.1
[29] fansi_1.0.3        parallelly_1.32.1  lava_1.6.10        ggplot2_3.3.6     
[33] purrr_0.3.5        magrittr_2.0.3     MASS_7.3-54        scales_1.2.1      
[37] codetools_0.2-18   splines_4.1.2      future_1.28.0      colorspace_2.0-3  
[41] utf8_1.2.2         munsell_0.5.0     
> 
> 
> 	
> 
> proc.time()
    user   system  elapsed 
9451.431   23.811 9546.157 
