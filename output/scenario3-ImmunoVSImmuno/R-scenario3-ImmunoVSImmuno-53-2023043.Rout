
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## * Header
> ## ** interactive
> ## path <- "h:/SundKonsolidering_BioStatHome/Cluster/GPC/article-restricted/"
> ## setwd(path)
> ## source("BATCH_scenario3-ImmunoVSImmuno.R")
> ## ** slurm
> ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/GPC/article-restricted/
> ## sbatch -a 1-1 -J 'scenario3-ImmunoVSImmuno' --output=/dev/null --error=/dev/null R CMD BATCH --vanilla BATCH_scenario3.R /dev/null 
> ## ** BATCH
> ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/GPC/article-restricted/
> ## R CMD BATCH --vanilla '--args iter_sim=1 n.iter_sim=10' BATCH_scenario3-ImmunoVSImmuno.R output/scenario3-ImmunoVSImmuno/R-ImmunoVSImmuno-1.Rout &
> ## ** BATCH loop
> ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/GPC/article-restricted/
> ## for ITER in `seq 1 10`;
> ## do
> ## eval 'R CMD BATCH --vanilla "--args iter_sim='$ITER' n.iter_sim=10" BATCH_scenario3-ImmunoVSImmuno.R output/scenario3-ImmunoVSImmuno/R-ImmunoVSImmuno-'$ITER'.Rout &'
> ## done
> 
> ## [22] 3353323
> ## [23] 3353324
> ## [24] 3353325
> ## [25] 3353326
> ## [26] 3353327
> ## [27] 3353328
> ## [28] 3353329
> ## [29] 3353330
> ## [30] 3353331
> ## [31] 3353332
> 
> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 270604 14.5     665617 35.6   408739 21.9
Vcells 451653  3.5    8388608 64.0  1819181 13.9
> 
> ## * Seed
> args <- commandArgs(TRUE) ## BATCH MODE
> if(length(args)>0){
+     for (arg in args){
+         eval(parse(text=arg))
+     }
+ }else{ ## SLUMR
+     iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_ID"))
+     n.iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_COUNT"))
+ } ## interactive
> if(is.na(iter_sim)){iter_sim <- 1}
> if(is.na(n.iter_sim)){n.iter_sim <- 10}
> cat("iteration ",iter_sim," over ",n.iter_sim,"\n",sep="")
iteration 53 over 100
> 
> set.seed(1)
> seqSeed <- sample(1:max(1e5,n.iter_sim),size=n.iter_sim,replace=FALSE)
> iSeed <- seqSeed[iter_sim]
> set.seed(iSeed)
> 
> cat("seed: ",iSeed,"\n")
seed:  29660 
> 
> ## * Prepare export
> path <- "."
> path.res <- file.path(path,"Results","scenario3-ImmunoVSImmuno")
> if(dir.exists(path.res)==FALSE){
+     if(dir.exists(file.path(path,"Results"))==FALSE){
+     dir.create(file.path(path,"Results"))
+     }
+     dir.create(path.res)
+ }
> path.output <- file.path(path,"output","scenario3-ImmunoVSImmuno")
> if(dir.exists(path.output)==FALSE){
+     if(dir.exists(file.path(path,"output"))==FALSE){
+     dir.create(file.path(path,"output"))
+     }
+     dir.create(path.output)
+ }
> 
> ## * Libraries
> require(survival)
Loading required package: survival
> require(BuyseTest) ## install.packages("BuyseTest")
Loading required package: BuyseTest
Loading required package: Rcpp
BuyseTest version 2.3.12
> require(survRM2) ## install.packages("survRM2")
Loading required package: survRM2
> suppressMessages(require(FHtest)) ## install.packages("FHtest")
> 
> ## * Settings
> n.sim <- 100
> 
> Tps.inclusion <- 12 
> FollowUp.time_list <- c(12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60) ## every 3 months
> Threshold_list <- c(0,6,12,18,24) ## 0,6,12
> 
> grid <- expand.grid(FollowUpTime = FollowUp.time_list,
+                     threshold = Threshold_list,
+                     scenario = 0)
> 
> #pour faire varier les ratio threshold/restriction time
> grid <- rbind(grid,
+               cbind(FollowUpTime = FollowUp.time_list,
+                     threshold = 0.2*FollowUp.time_list,
+                     scenario = 3))
> 
> grid <- rbind(grid,
+               cbind(FollowUpTime = FollowUp.time_list,
+                     threshold = 0.3*FollowUp.time_list,
+                     scenario = 5))
> 
> grid <- rbind(grid,
+               cbind(FollowUpTime = FollowUp.time_list,
+                     threshold = 0.4*FollowUp.time_list,
+                     scenario = 6))
> 
> #pour obtenir la valeur exacte du net benefit sans censure
> grid <- rbind(grid,
+               cbind(FollowUpTime = 1000,
+                     threshold = Threshold_list,
+                     scenario = 4))
> 
> 
> 
> ## * Loop
> res <- NULL
> for(iSim in 1:n.sim){ ## iSim <- 1
+     cat(iSim,": ")
+     for (iGrid in 1:NROW(grid)){ ## iGrid <- 1 
+         cat("*")
+ 
+         iThreshold <- grid$threshold[iGrid]
+         iFollowUpTime <- grid$FollowUpTime[iGrid]
+         iScenario <- grid$scenario[iGrid]
+ 
+         ## ** Generate data
+       	HazC <- 0.18
+         HazT <- 0.18
+       
+         HazT2T <- HazT*0.6
+         HazT3T <- HazT*0.3
+         HazT4T <- HazT*0.08
+         HazT5T <- HazT*0.02
+       
+         HazT2C <- HazC*0.6
+         HazT3C <- HazC*0.5
+         HazT4C <- HazC*0.45
+         HazT5C <- HazC*0.1
+       
+         t1 <- 3
+         t2 <- 6
+         t3 <- 9
+         t4 <- 12
+         
+         t1C <- 3
+         t2C <- 6
+         t3C <- 9
+         t4C <- 12
+         
+         n.Treatment <- 200
+         n.Control <- 200
+         n <- n.Treatment+n.Control
+         group <- c(rep(1, n.Treatment),rep(0, n.Control))
+ 	       
+         ## Tox
+         ptoxC <- c(0.3,0.3)
+         ptoxT <- c(0.3,0.1)
+         Toxevent1.Ctr <- rbinom(n.Control,1,ptoxC[1])
+         Toxevent1.Tr <- rbinom(n.Treatment,1,ptoxT[1])
+         Toxevent2.Ctr <- rbinom(n.Control,1,ptoxC[2])
+         Toxevent2.Tr <- rbinom(n.Treatment,1,ptoxT[2])
+       
+         ## *** in control group
+         TimeEvent.Ctr1 <- rexp(n.Control,HazC)
+         TimeEvent.Ctr2 <- rexp(n.Control,HazT2C)
+         TimeEvent.Ctr3 <- rexp(n.Control,HazT3C)
+         TimeEvent.Ctr4 <- rexp(n.Control,HazT4C)
+         TimeEvent.Ctr5 <- rexp(n.Control,HazT5C)
+         
+         TimeEvent.Ctr <- ifelse(TimeEvent.Ctr1<t1C,TimeEvent.Ctr1,
+                               ifelse(t1C+TimeEvent.Ctr2<t2C,t1C+TimeEvent.Ctr2,
+                                      ifelse(t2C+TimeEvent.Ctr3<t3C,t2C+TimeEvent.Ctr3,
+                                             ifelse(t3C+TimeEvent.Ctr4<t4C,t3C+TimeEvent.Ctr4,
+                                                    t4C+TimeEvent.Ctr5))))
+         
+         ## *** in treatment group
+         TimeEvent.Tr1 <- rexp(n.Control,HazT)
+         TimeEvent.Tr2 <- rexp(n.Control,HazT2T)
+         TimeEvent.Tr3 <- rexp(n.Control,HazT3T)
+         TimeEvent.Tr4 <- rexp(n.Control,HazT4T)
+         TimeEvent.Tr5 <- rexp(n.Control,HazT5T)
+         TimeEvent.Tr <- ifelse(TimeEvent.Tr1<t1,TimeEvent.Tr1,
+                              ifelse(t1+TimeEvent.Tr2<t2,t1+TimeEvent.Tr2,
+                                     ifelse(t2+TimeEvent.Tr3<t3,t2+TimeEvent.Tr3,
+                                            ifelse(t3+TimeEvent.Tr4<t4,t3+TimeEvent.Tr4,
+                                                   t4+TimeEvent.Tr5))))
+         
+         TimeEvent <- c(TimeEvent.Tr,TimeEvent.Ctr)
+         Toxevent1 <- c(Toxevent1.Tr,Toxevent1.Ctr)
+         Toxevent2 <- c(Toxevent2.Tr,Toxevent2.Ctr)
+ 
+         Time.Cens <- runif(n,iFollowUpTime-Tps.inclusion,iFollowUpTime) ## varier temps de censure
+         Time <- pmin(Time.Cens,TimeEvent)
+         Event <- Time==TimeEvent
+         Event <- as.numeric(Event)
+         tab <- data.frame(group = group,
+                           Time = Time,
+                           Event = Event,
+                           Toxevent1 = Toxevent1,
+                           Toxevent2 = Toxevent2)
+         Taux.cens.reel <- 1-mean(Event)
+         
+         ## ** Analysis using LR
+         LR <- (survdiff(Surv(time=Time, event=Event) ~ group, data=tab, rho=0))
+         pval.LR <- 1 - pchisq(LR$chisq, 1) 
+   
+         ## ** analysis using NBPeron
+         NBPeron <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold),
+                               method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+         NBPeron.confint <- confint(NBPeron)
+ 	    
+ 	## ** Analysis using NBPeron + toxicity
+     	NBPeronTox1 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold) + B(Toxevent1, operator = "<0"),
+                          method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+     	NBPeronTox1.confint <- confint(NBPeronTox1)
+ 
+     	NBPeronTox2 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold) + B(Toxevent2, operator = "<0"),
+                          method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+     	NBPeronTox2.confint <- confint(NBPeronTox2)
+ 
+         ## ** Analysis using RMST
+         RMST <- rmst2(time=Time, status=Event, arm=group, tau = NULL, covariates = NULL, alpha = 0.05)
+         pval.RMSTdif <- RMST[["unadjusted.result"]][1,4]
+         pval.RMSTratio <- RMST[["unadjusted.result"]][2,4]
+   
+         ## ** Analysis using WLR # modifi? dans la version 2
+         WLR <- try(FHtestrcc(Surv(time=Time, event=Event) ~ group, data = tab, rho = 0,lambda = 1))
+         if(inherits(WLR,"try-error")){
+             pval.WLR <- NA
+         }else{
+             pval.WLR <- WLR$pvalue
+         }
+ 
+         ## ** Analysis using RNBPeron
+         if(iFollowUpTime<=24){
+             RNBPeron24.confint <- NBPeron.confint
+         }else{
+             RNBPeron24 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=24),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron24.confint <- confint(RNBPeron24)
+         }
+ 
+         if(iFollowUpTime<=36){
+             RNBPeron36.confint <- NBPeron.confint
+         }else{
+             RNBPeron36 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=36),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron36.confint <- confint(RNBPeron36)
+         }
+   
+         if(iFollowUpTime<=48){
+             RNBPeron48.confint <- NBPeron.confint
+         }else{
+             RNBPeron48 <- BuyseTest(data=tab,group ~ TTE(Time, status=Event, iThreshold, restriction=48),
+                                     method.inference = "u-statistic", scoring.rule = "Peron", trace = 0)
+             RNBPeron48.confint <- confint(RNBPeron48)
+         }
+   
+         ## ** créer la table de résultats
+         res <- rbind(res,c(iteration = iSim,
+                            FollowUp_time = iFollowUpTime,
+                            scenario = iScenario,
+                            Threshold = iThreshold,
+                            "Taux censure reel" = Taux.cens.reel,
+                            ## NBPeron
+                            estimate.NBPeron = NBPeron.confint[,"estimate"],
+                            se.NBPeron = NBPeron.confint[,"se"],
+                            lower.NBPeron = NBPeron.confint[,"lower.ci"],
+                            upper.NBPeron = NBPeron.confint[,"upper.ci"],
+                            pval.NBPeron = NBPeron.confint[,"p.value"],
+                            ## NBPeronTox1
+ 			   estimate.NBPeronTox1 = NBPeronTox1.confint[2,"estimate"],
+                            se.NBPeronTox1 = NBPeronTox1.confint[2,"se"],
+                            lower.NBPeronTox1 = NBPeronTox1.confint[2,"lower.ci"],
+                            upper.NBPeronTox1 = NBPeronTox1.confint[2,"upper.ci"],
+                            pval.NBPeronTox1 = NBPeronTox1.confint[2,"p.value"],
+                            ## NBPeronTox2
+ 			   estimate.NBPeronTox2 = NBPeronTox2.confint[2,"estimate"],
+                            se.NBPeronTox2 = NBPeronTox2.confint[2,"se"],
+                            lower.NBPeronTox2 = NBPeronTox2.confint[2,"lower.ci"],
+                            upper.NBPeronTox2 = NBPeronTox2.confint[2,"upper.ci"],
+                            pval.NBPeronTox2 = NBPeronTox2.confint[2,"p.value"],
+                            ## RNBPeron24
+                            estimate.RNBPeron24 = RNBPeron24.confint[,"estimate"],
+                            se.RNBPeron24 = RNBPeron24.confint[,"se"],
+                            lower.RNBPeron24 = RNBPeron24.confint[,"lower.ci"],
+                            upper.RNBPeron24 = RNBPeron24.confint[,"upper.ci"],
+                            pval.RNBPeron24 = RNBPeron24.confint[,"p.value"],
+                            ## RNBPeron36
+                            estimate.RNBPeron36 = RNBPeron36.confint[,"estimate"],
+                            se.RNBPeron36 = RNBPeron36.confint[,"se"],
+                            lower.RNBPeron36 = RNBPeron36.confint[,"lower.ci"],
+                            upper.RNBPeron36 = RNBPeron36.confint[,"upper.ci"],
+                            pval.RNBPeron36 = RNBPeron36.confint[,"p.value"],
+                            ## RNBPeron48
+                            estimate.RNBPeron48 = RNBPeron48.confint[,"estimate"],
+                            se.RNBPeron48 = RNBPeron48.confint[,"se"],
+                            lower.RNBPeron48 = RNBPeron48.confint[,"lower.ci"],
+                            upper.RNBPeron48 = RNBPeron48.confint[,"upper.ci"],
+                            pval.RNBPeron48 = RNBPeron48.confint[,"p.value"],
+                            ## Other
+                            pval.LOGRANK = pval.LR,
+                            pval.WeightedLOGRANK = pval.WLR,
+                            pval.RMSTdif = pval.RMSTdif,
+                            pval.RMSTratio = pval.RMSTratio))
+ 
+     }
+     saveRDS(res, file = file.path(path.res,paste0("simul_ImmunoVSImmuno_",iter_sim,"(tempo).rds")))
+     cat("\n")
+ }
1 : *********************************************************************************************************************************************
2 : *********************************************************************************************************************************************
3 : *********************************************************************************************************************************************
4 : *********************************************************************************************************************************************
5 : *********************************************************************************************************************************************
6 : *********************************************************************************************************************************************
7 : *********************************************************************************************************************************************
8 : *********************************************************************************************************************************************
9 : ***********************************************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
**********
10 : *********************************************************************************************************************************************
11 : *********************************************************************************************************************************************
12 : *********************************************************************************************************************************************
13 : *********************************************************************************************************************************************
14 : ***************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
******************************************************************************
15 : *************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
********************************************************
16 : *********************************************************************************************************************************************
17 : *********************************************************************************************************************************************
18 : *********************************************************************************************************************************************
19 : *********************************************************************************************************************************************
20 : *********************************************************************************************************************************************
21 : *********************************************************************************************************************************************
22 : ***************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
******************************************************************************************
23 : *********************************************************************************************************************************************
24 : *********************************************************************************************************************************************
25 : *********************************************************************************************************************************************
26 : *********************************************************************************************************************************************
27 : *****************************************************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
****
28 : *********************************************************************************************************************************************
29 : ****************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*****************************************************************************************************************************
30 : *********************************************************************************************************************************************
31 : *********************************************************************************************************************************************
32 : ************************************************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*********
33 : *********************************************************************************************************************************************
34 : *********************************************************************************************************************************************
35 : *********************************************************************************************************************************************
36 : *********************************************************************************************************************************************
37 : **************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*******************************************************************************************************************************
38 : *********************************************************************************************************************************************
39 : *********************************************************************************************************************************************
40 : *********************************************************************************************************************************************
41 : *********************************************************************************************************************************************
42 : *********************************************************************************************************************************************
43 : *********************************************************************************************************************************************
44 : *********************************************************************************************************************************************
45 : *********************************************************************************************************************************************
46 : *********************************************************************************************************************************************
47 : *********************************************************************************************************************************************
48 : *********************************************************************************************************************************************
49 : *********************************************************************************************************************************************
50 : *********************************************************************************************************************************************
51 : *******************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
**************************************************************************
52 : *********************************************************************************************************************************************
53 : *********************************************************************************************************************************************
54 : ********Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*************************************************************************************************************************************
55 : *****************************************************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
****
56 : ******************************************************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
***
57 : *********************************************************************************************************************************************
58 : **Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*******************************************************************************************************************************************
59 : *********************************************************************************************************************************************
60 : *********************************************************************************************************************************************
61 : **************************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*******************************************
62 : *********************************************************************************************************************************************
63 : *********************************************************************************************************************************************
64 : ******************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
***************************************************************************************************************
65 : *********************************************************************************************************************************************
66 : *********************************************************************************************************************************************
67 : *********************************************************************************************************************************************
68 : *********************************************************************************************************************************************
69 : *********************************************************************************************************************************************
70 : *********************************************************************************************************************************************
71 : *********************************************************************************************************************************************
72 : *********************************************************************************************************************************************
73 : *********************************************************************************************************************************************
74 : *********************************************************************************************************************************************
75 : *********************************************************************************************************************************************
76 : *******************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
**************************************************************
77 : *********************************************************************************************************************************************
78 : *********************************************************************************************************************************************
79 : *********************************************************************************************************************************************
80 : *********************************************************************************************************************************************
81 : ***********************************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
**********************************************
82 : ************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
*****************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
****************************************
83 : *********************************************************************************************************************************************
84 : *********************************************************************************************************************************************
85 : *********************************************************************************************************************************************
86 : *********************************************************************************************************************************************
87 : *********************************************************************************************************************************************
88 : *********************************************************************************************************************************************
89 : *********************************************************************************************************************************************
90 : *********************************************************************************************************************************************
91 : *********************************************************************************************************************************************
92 : *********************************************************************************************************************************************
93 : *********************************************************************************************************************************************
94 : *********************************************************************************************************************************************
95 : *********************************************************************************************************************************************
96 : *********************************************************************************************************************************************
97 : ***************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
**************************************************************************Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments
****Error in (w^rho * (1 - w)^lambda) %*% t(neventg) : 
  non-conformable arguments

98 : *********************************************************************************************************************************************
99 : *********************************************************************************************************************************************
100 : *********************************************************************************************************************************************
> 
> ## * Export
> saveRDS(res, file = file.path(path.res,paste0("simul_ImmunoVSImmuno_",iter_sim,".rds")))
> 
> ## * R version
> print(sessionInfo())
R version 4.1.2 (2021-11-01)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux 8.6 (Ootpa)

Matrix products: default
BLAS:   /opt/software/R/4.1.2/lib64/R/lib/libRblas.so
LAPACK: /opt/software/R/4.1.2/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] FHtest_1.5       KMsurv_0.1-5     interval_1.1-0.8 MLEcens_0.1-5   
 [5] Icens_1.66.0     perm_1.0-0.2     survRM2_1.0-4    BuyseTest_2.3.12
 [9] Rcpp_1.0.8.3     survival_3.2-13 

loaded via a namespace (and not attached):
 [1] pillar_1.8.1       compiler_4.1.2     tools_4.1.2        digest_0.6.29     
 [5] lifecycle_1.0.2    tibble_3.1.8       gtable_0.3.1       lattice_0.20-45   
 [9] pkgconfig_2.0.3    rlang_1.0.5        Matrix_1.3-4       cli_3.4.0         
[13] parallel_4.1.2     SparseM_1.81       prodlim_2019.11.13 dplyr_1.0.9       
[17] MatrixModels_0.5-0 generics_0.1.3     vctrs_0.4.1        globals_0.16.1    
[21] stats4_4.1.2       grid_4.1.2         tidyselect_1.1.2   glue_1.6.2        
[25] data.table_1.14.2  listenv_0.8.0      R6_2.5.1           future.apply_1.9.1
[29] fansi_1.0.3        parallelly_1.32.1  lava_1.6.10        ggplot2_3.3.6     
[33] purrr_0.3.4        magrittr_2.0.3     MASS_7.3-54        scales_1.2.1      
[37] codetools_0.2-18   splines_4.1.2      future_1.28.0      colorspace_2.0-3  
[41] utf8_1.2.2         munsell_0.5.0     
> 
> 
> 	
> 
> proc.time()
    user   system  elapsed 
7897.806   21.334 7975.916 
